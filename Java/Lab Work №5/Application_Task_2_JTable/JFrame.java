import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dkoch
 */
public class JFrame extends javax.swing.JFrame {
    
    static ArrayList<Office> officeList; 
    private MyTableModel model;
       
    /**
     * Creates new form JFrame
     */
    public JFrame() {
        
        officeList  = new ArrayList<>();
        
        model = new MyTableModel()
        {  
            public boolean isCellEditable(int row, int column){  
                return true;  
            }
        };  
        
        initComponents();
        
        jTable1.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButtonNewOffice = new javax.swing.JButton();
        jButtonDelOffice = new javax.swing.JButton();
        jButtonCalcPaintCons = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Приложение для расчета расхода краски");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jButtonNewOffice.setText("Новый");
        jButtonNewOffice.addActionListener(this::jButtonNewOfficeActionPerformed);

        jButtonDelOffice.setText("Удалить");
        jButtonDelOffice.addActionListener(this::jButtonDelOfficeActionPerformed);

        jButtonCalcPaintCons.setText("Расчитать расход краски, л.");
        jButtonCalcPaintCons.addActionListener(this::jButtonCalcPaintConsActionPerformed);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Длина комнаты", "Ширина комнаты", "Высота комнаты", "Длина коридора", "Ширина коридора", "Высота коридора", "Расход "
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 923, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonNewOffice)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDelOffice)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCalcPaintCons)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(229, 229, 229))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNewOffice, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonDelOffice)
                        .addComponent(jButtonCalcPaintCons)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewOfficeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewOfficeActionPerformed
        officeList.add(new Office());
        jTable1.updateUI();
    }//GEN-LAST:event_jButtonNewOfficeActionPerformed

    private void jButtonDelOfficeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelOfficeActionPerformed
        try {
            officeList.remove(jTable1.getSelectedRow());
            jTable1.updateUI();}
        catch (Exception e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_jButtonDelOfficeActionPerformed

    private void jButtonCalcPaintConsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcPaintConsActionPerformed
        for (Office office : officeList) {
            office.calcSquareWallsWithoutDoorAndWindow();
            office.calcSquareHallWallsWithoutDoorAndWindow();
            office.calcPaintConsOffice();
        }
        jTable1.updateUI();
    }//GEN-LAST:event_jButtonCalcPaintConsActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new JFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcPaintCons;
    private javax.swing.JButton jButtonDelOffice;
    private javax.swing.JButton jButtonNewOffice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

class MyTableModel extends DefaultTableModel {
    public  MyTableModel() {
        addColumn("Длина комнаты");  
        addColumn("Ширина комнаты");  
        addColumn("Высота комнаты");  
        addColumn("Длина коридора");
        addColumn("Ширина коридора");
        addColumn("Высота коридора");
        addColumn("Расход");
    } 
 
    //кол строк 
    public int getRowCount() {
        return JFrame.officeList.size();
    }
    
    //данные таблицы        
    public Object getValueAt(int row, int column){
        switch (column) {
        case  0:
            return  JFrame.officeList.get(row).length;
        case  1:
            return  JFrame.officeList.get(row).width;
        case  2:
            return  JFrame.officeList.get(row).height;
        case  3:
            return  JFrame.officeList.get(row).lengthHall;
        case  4:
            return  JFrame.officeList.get(row).widthHall;
        case  5:
            return  JFrame.officeList.get(row).heightHall;
        case  6:
            return  JFrame.officeList.get(row).paintConsOffice;
        }

        return "";
    }
    
     // Изменение элемента
    public void setValueAt(Object o, int i, int i1) {
        switch (i1) {
        case  0: { 
            try { JFrame.officeList.get(i).length = new Double((String)o); }
            catch (Exception e) {
                JFrame.officeList.get(i).length = 0; }}
        case  1: { 
            try { JFrame.officeList.get(i).width = new Double((String)o); }
            catch (Exception e) {
                JFrame.officeList.get(i).width = 0; }}
        case  2: { 
            try { JFrame.officeList.get(i).height = new Double((String)o); }
            catch (Exception e) {
                JFrame.officeList.get(i).height = 0; }}
        case  3: { 
            try { JFrame.officeList.get(i).lengthHall = new Double((String)o); }
            catch (Exception e) {
                JFrame.officeList.get(i).lengthHall = 0; }}
        case  4: { 
            try { JFrame.officeList.get(i).widthHall = new Double((String)o); }
            catch (Exception e) {
                JFrame.officeList.get(i).widthHall = 0; }}
        case  5: { 
            try {
                JFrame.officeList.get(i).heightHall = new Double((String)o); 
               }
            catch (Exception e) {
                JFrame.officeList.get(i).heightHall = 0; }}      
        }
     }
}